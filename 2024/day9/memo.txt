ver1をData.Sequenceで改善してかなり高速化はしたものの、かなりかかる。
もっと効率的な方法はあるのか。

それぞれのブロックの位置を前から数えることで、
「ファイルfidの開始位置、長さ」と
「全ての空白ブロックの開始位置、長さ」は把握できる。
ブロックの長さは後半はたかだか9しかない。繋がった空白を気にする必要はないので。
そこで、空白ブロックはサイズ毎に分けて、開始位置のIntSetに入れておく。

ファイルのfidの開始位置、長さ、の情報を、最大から順に舐めて、更新した結果をリストに集める。
やることは、
その長さ以上の空白ブロックで、開始位置がfidの開始位置以前の、最も手前にあるものを見つける。
なければ状況はそのままで、fidファイルも移動せずで終わり。

見つかったとき、その空白ブロックを削除し、残りがあるなら残りの長さの空白ブロックを開始位置ずらして追加する。
ファイルfidも、その空白ブロックの位置から始まる、と知識を更新する。

という、空白ブロックデータの更新と、データブロックの移動先発見を行う。

データブロックの移動先が全て決まったら、[先頭位置 .. +長さ-1] のsumにfidを掛けたものを足し合わせたら答え。
空白ブロックの情報は、線形探索で時間がかかってもよければ、リストで保管しても済む。

「サイズxx以上、最も左、（位置yy未満）」を探し出せるSQLみたいな計算を簡単に書けるデータ構造があればいいんだが。

-> ver2.hsに結実。
