{-
そこから到達できる 9 の座標のリスト、を持つような配列を作ればstaticにできるかな？
-}

import Data.Array
import Data.List
import Debug.Trace

runner i f = do
  ls <- lines <$> readFile i
  let ans = f ls
  print ans

test1 = runner "sample.txt" part1
main1 = runner "input.txt" part1

part1 ls = (ans, sum ans)
  where
    h = length ls
    w = length $ head ls
    bnds = ((1,1),(h,w))
    arr = listArray bnds $ concat ls
    to9 = listArray bnds $ map to9f $ range bnds
    to9f ij =
      case arr ! ij of
        '9' -> [ij]
        d   -> concat [to9 ! pq | pq <- neighbors ij, succ d == arr ! pq]
    neighbors (i,j) = filter (inRange bnds) [(pred i,j),(succ i,j),(i,pred j),(i,succ j)]
    ans = [length $ nub $ to9 ! ij| (ij,'0') <- assocs arr]

test2 = runner "sample.txt" part2
main2 = runner "input.txt" part2

part2 ls = (ans, sum ans)
  where
    h = length ls
    w = length $ head ls
    bnds = ((1,1),(h,w))
    arr = listArray bnds $ concat ls
    to9 = listArray bnds $ map to9f $ range bnds
    to9f ij =
      case arr ! ij of
        '9' -> [ij]
        d   -> concat [to9 ! pq | pq <- neighbors ij, succ d == arr ! pq]
    neighbors (i,j) = filter (inRange bnds) [(pred i,j),(succ i,j),(i,pred j),(i,succ j)]
    ans = [length $ to9 ! ij| (ij,'0') <- assocs arr]

{-
むしろpart2の方がnubがない分雑なプログラムになっている。
個数にして足し合わせる、とやる方が偉いけど、計算量が問題にならないからこれでいいや。

ghci> test1
([5,6,5,3,1,3,5,3,5],36)
ghci> main1
([1,2,1,5,2,2,1,1,2,2,1,2,1,1,7,1,5,3,1,2,3,3,3,3,2,4,5,1,3,4,3,2,1,3,5,
1,1,1,2,1,2,2,2,3,3,3,2,1,5,1,1,5,1,2,3,3,1,5,2,2,3,1,5,3,3,3,2,1,1,1,3,
2,4,1,3,3,2,1,3,1,3,2,4,2,2,1,3,2,4,4,2,3,3,4,2,1,1,1,3,3,2,3,2,1,2,1,2,
4,3,2,3,2,2,1,1,2,2,2,1,1,1,3,5,6,2,2,2,2,4,4,2,2,6,1,2,2,1,4,4,3,3,2,2,
2,1,1,3,4,3,1,1,5,4,2,2,2,2,3,6,6,1,4,3,2,3,2,2,4,4,1,2,4,3,5,2,1,1,3,2,
3,2,1,1,2,1,2,8,1,4,4,3,4,8,4,2,7,5,1,3,4,3,2,3,1,1,1,4,4,1,6,3,3,2,1,2,
1,3,5,4,6,1,1,2,2,2,3,1,2,1,3,4,10,2,3,2,2,1,1,1,2,3,3,2,6,1,4,2,7,2,2,1
,3,3,2,4,1,2,2,2,1,4,1,2,1,1,4,3,5,3,1,1,5,2,2,2,4,2,4,3,4,1,5,2,1,2,5,3
,2,1,4,2,2,2,1,2,1,4,1,1,1,1,2,1,1,2,2,1,3,1,1,1],778)
ghci> test2
([20,24,10,4,1,4,5,8,5],81)
ghci> main2
([2,8,4,28,2,2,2,3,2,3,1,2,2,1,16,2,42,3,2,4,4,4,3,3,3,8,56,1,3,8,5,8,1,
7,16,2,2,2,2,2,3,8,2,5,12,12,3,1,16,8,1,13,2,8,8,8,1,5,2,4,6,6,16,5,4,3,
2,3,1,1,4,2,14,1,5,4,20,2,4,2,9,13,20,6,3,2,18,4,30,13,3,5,6,4,6,2,2,1,10,
3,3,5,8,2,12,1,4,8,3,4,5,4,4,3,1,6,3,3,2,3,2,4,7,15,4,8,9,4,25,6,8,4,10,3,
2,3,2,25,6,6,11,2,2,2,1,1,5,15,5,1,2,9,15,8,4,6,3,5,52,20,1,14,3,6,5,4,6,6,
6,2,8,14,9,9,2,1,2,4,2,6,2,1,1,3,2,2,18,4,10,11,5,12,18,7,4,22,6,1,3,20,4,
10,8,1,1,4,14,9,1,11,8,5,6,1,2,1,3,17,4,8,1,1,4,2,3,4,1,2,3,3,6,19,6,9,4,4,
1,2,2,8,5,9,6,10,1,5,8,19,2,6,1,10,5,4,15,1,4,12,6,1,15,1,2,4,3,8,3,8,4,2,1,
7,2,3,3,21,2,8,5,9,1,26,6,5,4,18,10,4,1,5,3,4,2,4,4,1,13,1,2,1,1,2,1,4,8,5,
1,6,2,2,8],1925)
-}
