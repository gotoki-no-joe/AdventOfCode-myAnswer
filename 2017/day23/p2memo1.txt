まず素直に翻訳する。

main { a = 1; goto 01 }

01 : set b 57      ; b = 57
02 : set c b       ; c = b
03 : jnz a 2       ; if a then goto 05
04 : jnz 1 5       ; goto 09
05 : mul b 100     ; b = b * 100           <- 03
06 : sub b -100000 ; b = b + 100000
07 : set c b       ; c = b
08 : sub c -17000  ; c = c + 17000
09 : set f 1       ; f = 1                 <- 04 <- 32
10 : set d 2       ; d = 2
11 : set e 2       ; e = 2                 <- 24
12 : set g d       ; g = d                 <- 20
13 : mul g e       ; g = g * e
14 : sub g b       ; g = g - b
15 : jnz g 2       ; if g then goto 17
16 : set f 0       ; f = 0
17 : sub e -1      ; e = e + 1             <- 15
18 : set g e       ; g = e
19 : sub g b       ; g = g - b
20 : jnz g -8      ; if g then goto 12
21 : sub d -1      ; d = d + 1
22 : set g d       ; g = d
23 : sub g b       ; g = g - b
24 : jnz g -13     ; if g then goto 11
25 : jnz f 2       ; if f then goto 27
26 : sub h -1      ; h = h + 1 ###
27 : set g b       ; g = b                 <- 25
28 : sub g c       ; g = g - c
29 : jnz g 2       ; if g then goto 31
30 : jnz 1 3       ; goto 33 = ##END##
31 : sub b -17     ; b = b + 17            <- 29
32 : jnz 1 -23     ; goto 09

aは最初に調べられる以外に使われない。そこまでの間に合流もない。
なので03はかならず飛ぶ。
04には制御は決して届かないので消す。(これはpart1とpart2の区別のためにあるのな。)
順調に計算をまとめる。14までは。
15-16は、g==0ならf=0、で17に合流している。
なんとなく、gをアキュムレータとして、一時的な計算が終わったら次には使っていない感じ。
fはフラグで、0か1しか入らない。
約数の数を数えている的なことか？
25-26は、f=0ならh++で、何か数えている。hはここでカウンタとして使われていて、それが答えになるので。

// a = 1
b = 105700
c = 122700
09:            <- 32
f = 1
d = 2
11:            <- 24
e = 2
12:            <- 20
if (d * e == b) { f = 0; }
e++
if (e /= b) then goto 12
d++
if (d /= b) then goto 11
if (f == 0) { h++; } // **important**
if (b == c) then goto 33 = ##END##
b = b + 17
goto 09

とりあえずここまで縮まった。
次に意味を読み取ろう。
09からラストまでの大ループで、b==cとなるまでb+=17しつつ繰り返している。
ループ一回の処理は、
fのフラグを初期化し、d,eを++する二重ループで d*e==bとなる値が見つかればh++する

for (b = 105700; b < 122700; b = b + 17) {

f = 1

for (d = 2; d < b; d++)
    for (e = 2;e < b; e++)
        if (d * e == b) f = 0; -- ここでbreakすればだいぶマシになるか。

if (f == 0) { h++; } // **important**

}

最終的に、解釈すると、

105700から+17きざみで122700未満の数bで、2以上(b未満)の2数の積で表せるもの、
つまり素数でないものの数を数えている。


うーん、Data.Numbers.Primesでやっても、元のテイスト残してJSで計算しても、どっちでも914になるのだけど、違うといわれた。
つまり、どこかで解釈を間違えているのか？
